{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gamer\\\\TaskManagerWeb\\\\Full-Stack-Task-Manager\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Dashboard from \"./components/Dashboard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  useEffect(() => {\n    // Set up interval to refresh token every 30 seconds\n    const interval = setInterval(async () => {\n      const refreshToken = localStorage.getItem(\"refreshToken\");\n      if (refreshToken) {\n        try {\n          const res = await api.post(\"/auth/refresh\", {\n            refreshToken\n          });\n          localStorage.setItem(\"accessToken\", res.data.accessToken);\n          console.log(\"Auto-refresh: new access token:\", res.data.accessToken);\n        } catch (err) {\n          console.log(\"Auto-refresh failed:\", err);\n          localStorage.removeItem(\"accessToken\");\n          localStorage.removeItem(\"refreshToken\");\n          window.location.href = \"/login\";\n        }\n      }\n    }, 30000); // 30 seconds\n\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/dashboard\",\n        element: localStorage.getItem(\"accessToken\") ? /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","BrowserRouter","Router","Routes","Route","Navigate","Login","Register","Dashboard","jsxDEV","_jsxDEV","App","_s","interval","setInterval","refreshToken","localStorage","getItem","res","api","post","setItem","data","accessToken","console","log","err","removeItem","window","location","href","clearInterval","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["C:/Users/Gamer/TaskManagerWeb/Full-Stack-Task-Manager/frontend/src/App.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Dashboard from \"./components/Dashboard\";\n\nfunction App() {\n  useEffect(() => {\n    // Set up interval to refresh token every 30 seconds\n    const interval = setInterval(async () => {\n      const refreshToken = localStorage.getItem(\"refreshToken\");\n      if (refreshToken) {\n        try {\n          const res = await api.post(\"/auth/refresh\", { refreshToken });\n          localStorage.setItem(\"accessToken\", res.data.accessToken);\n          console.log(\"Auto-refresh: new access token:\", res.data.accessToken);\n        } catch (err) {\n          console.log(\"Auto-refresh failed:\", err);\n          localStorage.removeItem(\"accessToken\");\n          localStorage.removeItem(\"refreshToken\");\n          window.location.href = \"/login\";\n        }\n      }\n    }, 30000); // 30 seconds\n\n    return () => clearInterval(interval); \n  }, []);\n\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/login\" element={<Login />} />\n        <Route path=\"/register\" element={<Register />} />\n        <Route\n          path=\"/dashboard\"\n          element={\n            localStorage.getItem(\"accessToken\") ? (\n              <Dashboard />\n            ) : (\n              <Navigate to=\"/login\" />\n            )\n          }\n        />\n        <Route path=\"*\" element={<Navigate to=\"/login\" />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}